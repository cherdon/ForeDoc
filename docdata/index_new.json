{"common": {"the": 1, "you": 1, "a": 1, "both": 1, "that": 1, "not": 1, "print": 1, "see": 1, "if": 1, "on": 1, "or": 1, "in": 1, "this": 1, "also": 1, "only": 1, "returns": 1, "ref": 1, "for": 1, "by": 1, "be": 1, "used": 1, "wiki": 1, "class": 1, "with": 1, "and": 1, "none": 1, "function": 1, "of": 1, "are": 1, "attached": 1, "is": 1, "to": 1, "use": 1, "will": 1, "from": 1, "var": 1, "at": 1, "get": 1, "set": 1, "when": 1, "it": 1, "can": 1, "as": 1, "an": 1}, "pages": [["Documentation", "Fore Documentation (1.0.1)"], ["D_SystemRequirements", "System Requirements"], ["D_SettingUp", "Setting up the project"], ["D_ProjectRepo", "Project Repository"], ["D_AssetStore", "Unity Asset Store"], ["D_OtherSoftware", "Other Software"], ["D_PreparingEnvironmentIntro", "Preparing the environment"], ["D_PreparingEnvironmentImporting", "Importing of models"], ["D_PreparingEnvironmentProbuilderizing", "Probuilderize"], ["D_ProceduralBuildingIntro", "Procedural Building"], ["D_ProceduralBuildingPreReq", "Pre-requisites"], ["D_ProceduralBuildingOSM", "Download OSM Data"], ["D_ProceduralBuildingCrossRef", "Cross Reference"], ["D_ProceduralBuildingInternalise", "Internalise Data"], ["D_ProceduralBuildingHeight", "Customise Building Height"], ["D_ProceduralBuildingTexture", "Customise Building Texture"], ["D_ProceduralBuildingTextureMap", "Customise Texture Mapping"], ["D_ProceduralBuildingImport", "Importing to Unity"], ["D_AssetLibraryIntro", "Building Standard Assets"], ["D_AssetLibraryBusStop", "Bus Stop"], ["D_AssetLibraryCoveredWalkway", "Covered Walkway"], ["D_AssetLibraryBench", "Bench"], ["D_AssetLibraryBollard", "Bollard"], ["D_AssetLibraryPostBox", "Post Box"], ["D_AssetLibraryStreetSign", "Street Sign"], ["D_AssetLibraryStreetLighting", "Street Lighting"], ["D_AssetLibraryUtiliseLibrary", "Other Assets"], ["D_VehicleSimulationIntro", "Vehicle Simulation"], ["D_VehicleSimulationPreReq", "Pre-requisites"], ["D_VehicleSimulationSpawn", "Spawn Point"], ["D_VehicleSimulationAnimator", "State Machine Animator"], ["D_VehicleSimulationStraight", "Straight Lines"], ["D_VehicleSimulationBends", "Turning Around Bends"], ["D_VehicleSimulationCarpark", "Carpark Simulation"], ["D_VehicleSimulationDespawn", "Despawn Point"], ["D_PedestrianSimulationIntro", "Pedestrian Simulation"], ["D_PedestrianSimulationPreReq", "Pre-requisites"], ["D_PedestrianSimulationBasicInfo", "Basic Information"], ["D_PedestrianSimulationClassifyObjects", "Classifying Objects"], ["D_PedestrianSimulationWaypoints", "Building Waypoint System"], ["D_PedestrianSimulationSetupAgent", "Setting Up Agents"], ["D_PedestrianSimulationAgentBehaviours", "Configuring Agent Behaviours"], ["D_PedestrianSimulationScalingUp", "Scaling up the Simulation"]], "info": [["below, you can find the minimum requirements to run the framework. actual performance and rendering quality may vary depending on the complexity of your project", 1], ["minimum requirements", 1], ["windows", 1], ["macos", 1], ["linux (support in preview", 1], ["operating system version", 1], ["windows 7 (sp1+) and windows 10, 64-bit versions only", 1], ["sierra 10.12.6", 1], ["ubuntu 16.04, ubuntu 18.04, and centos 7", 1], ["cpu", 1], ["x64 architecture with sse2 instruction set support", 1], ["x64 architecture with sse2 instruction set support", 1], ["x64 architecture with sse2 instruction set support", 1], ["graphics api", 1], ["dx10, dx11, and dx12-capable gpus", 1], ["metal-capable intel and amd gpus", 1], ["opengl 3.2+ or vulkan-capable, nvidia and amd gpus", 1], ["additional requirements", 1], ["hardware vendor officially supported drivers", 1], ["apple officially supported drivers", 1], ["gnome desktop environment running on top of x11 windowing system, nvidia official proprietary graphics driver or amd mesa graphics driver. other configuration and user environment as provided stock with the supported distribution (kernel, compositor, etc", 1], ["\u00a0\u00a0\u00a0", 1], ["for all operating systems, the unity editor is supported on workstations or laptop form factors, running without emulation, container or compatibility layer", 1], ["area:none", 1], ["to set up the project, there are project files, software as well as plugins to download and set up", 2], ["in the following sections, we will guide you through on them, whereas specific plugins will be taught on where to download as we reach and require usage", 2], ["information correct as of 6th july 2020", 2], ["project repository", 3], ["the project uses github as a version control system, where the assets and scripts are all stored there", 3], ["in the event that you are not able to obtain the correct project files from github, you may download it from dropbox below", 3], ["dropbox link", 3], ["expires on 25th september 2020 for security reasons", 3], ["github steps", 3], ["make sure you have", 3], ["git", 3], ["installed", 3], ["go to the", 3], ["github repository", 3], ["if you don't have access, you can", 3], ["request", 3], ["for it from me", 3], ["click on", 3], ["code", 3], ["and copy the link there", 3], ["if you have github desktop installed, follow the steps", 3], ["here", 3], ["to clone the repository", 3], ["if not, follow the following steps", 3], ["open command prompt (for windows) and terminal (for mac", 3], ["key in the following", 3], ["git clone <copied link here", 3], ["done! you have the project files in your local computer now", 3], ["note", 3], ["if you do not have", 3], ["git lfs", 3], ["installed, some project files might be missing", 3], ["note", 3], ["common problems might include improper installation of git, please follow the steps for installing git correctly", 3], ["this section is last updated 5th july 2020", 3], ["unity asset store", 4], ["there are several dependencies that we built the framework with. we have attached it with the project files, but in the event that you want the original assets, you may purchase or find them below", 4], ["assets", 4], ["polarith ai pro", 4], ["used for the pedastrian and vehicle simulations", 4], ["easyroads3d v3", 4], ["used for generating the roads progressively", 4], ["probuilder", 4], ["used to convert drawn bim models into gameobjects for easy world manipulation", 4], ["information correct as of 6th july 2020", 4], ["other software", 5], ["other software we use are mostly for drawing and rendering the models before importing them into unity. this might be more important if you were the designer of the project", 5], ["software", 5], ["rhino 6", 5], ["photoshop", 5], ["information correct as of 6th july 2020", 5], ["the following infographic describes the process of processing the environment while importing                            from rhino to unity", 6], ["note", 6], ["anything that users might have to take note of", 6], ["new updates here", 6], ["new updates here", 6], ["importing of models into unity", 7], ["note", 7], ["avoid importing the obj file into unity as it will cause the model to crash", 7], ["thus, we have devised a general process of exporting the model.", 7], ["ensure the materials in the models are applied accordingly", 7], ["export the model as an fbx file. fbx retains the mapping properties of the textures but not the textures themselves", 7], ["to circumvent this issue, export the model as an obj into a separate folder to get all of the used textures in one place", 7], ["import the textures from the obj folder into unity", 7], ["import the fbx file into unity", 7], ["select parent component of the model, and right click > unpack pre fab completely", 7], ["new updates here", 7], ["probuilderizing of models", 8], ["processing the model via the probuilder asset, before centering the pivots for all of the geometries so that the mesh colliders can be accurately generated", 8], ["select parent component of the model, and right click > unpack pre fab completely", 8], ["right click > select children", 8], ["click on probuilderize. when prompted, select \u201cyes\u201d to probuilderize children of selection", 8], ["right click > select children", 8], ["click center pivot", 8], ["check that every component\u2019s centre has been centred by selecting it individually and toggling between center/pivot (top left button). after, check that the centre/pivot points are at the same location in the centre of the component", 8], ["new updates here", 8], ["the following infographic describes the process of setting up and using the                         procedural generation feature", 9], ["note", 9], ["anything that users might have to take note of", 9], ["new updates here", 9], ["new updates here", 9], ["pre-requisites", 10], ["the procedural building feature is built with cad software, and plugins to assist with the quick                        generation of textures and shapes", 10], ["before you begin, ensure that you have the following installed", 10], ["software", 10], ["rhinoceros 6 (5 is also okay", 10], ["plugins", 10], ["grasshopper", 10], ["if you are using rhinoceros 5", 10], ["elk 2.2.2", 10], ["human", 10], ["if you are using", 10], ["rhino 6", 10], ["download human for rhino 6", 10], ["if you are using", 10], ["rhino 5", 10], ["download human + tree frog", 10], ["note", 10], ["please ensure that you know which version of rhinoceros you are using                         as it will determine which version of the recommended plugins you need to download. please refer                         to the installation instructions that are provided within each download if you are unsure on how to install them", 10], ["information correct as of 6th july 2020", 10], ["download osm data", 11], ["to start off, you must retrieve the relevant site location data for your project", 11], ["openstreetmap", 11], ["go to", 11], ["openstreetmap", 11], ["and register for an account (or log in if you do have an account", 11], ["on the top left corner, enter the address of your planned site", 11], ["once your site has been located, determine the size of the surrounding environment that you wish to download.  to change the size, simply use your scroll wheel to zoom in or out of the map", 11], ["once you are happy with your choice, press the \u201cexport\u201d button at the top left header", 11], ["press the second \u201cexport\u201d button at the middle left of the screen to confirm your choice", 11], ["save the file to a directory of your choice and name the file to whatever you prefer", 11], ["new updates here", 11], ["cross reference", 12], ["this step is for grasshopper to output the data into rhino and for you to cross reference the output data with information that is displayed in google maps or openstreetmaps", 12], ["open up rhino 6 and start up grasshopper (gh", 12], ["press the \u201copen\u201d icon and select the provided gh file named \u201cgenerating from osm.gh\u201d", 12], ["find the component bubble \u201cosm file\u201d which is located at the left of the script. right click and drag the canvas to move around", 12], ["right click the \u201cosm file\u201d bubble, select \u201cselect one existing file\u201d and locate your recently downloaded osm file", 12], ["once selected, the script will automatically generate a map in rhino", 12], ["open up google maps or open street maps and compare the generated map, taking special attention to the outputs that are under \u201cautomated building classification\u201d. double check if the classifications are in order. you will need to constantly refer back to google maps or open streets map for the manual classifications as well", 12], ["scripting reference", 12], ["the script is segregated into three major sections. they are", 12], ["automated non-building info classification", 12], ["automated building classification", 12], ["manual building classification", 12], ["the first section is labelled", 12], ["automated non-building info classification", 12], ["which separates out information such as major and minor roads and turns them into curves. you may ignore this portion, especially if you are unfamiliar with grasshopper", 12], ["the second section is labelled", 12], ["automated building classification", 12], ["this portion helps separate the different types of buildings that exist in your map based on the data that is tagged within osm. examples of classification are landed properties, offices and apartments. within each category, a display is also given to showcase any building information that is available.  however, do note that osm might not give all the relevant data for the automated classification to work", 12], ["the third section is labelled", 12], ["manual building classification", 12], ["to help remedy the lack of data, this portion of the script is designed in a way where you will be able to extract the building footprints within the confines of land boundaries and categorize them according to their building types", 12], ["new updates here", 12], ["internalise data", 13], ["go back to the gh window and drag the canvas and locate the portion of the script as shown", 13], ["zoom into the following components", 13], ["the highlighted slider allows you to isolate and select the desired land boundary and the building footprints that are within that boundary, which will be marked as yellow in rhino, as shown on the right", 13], ["notice that each land boundary curve has a number assigned to it. this is the value that you may type into the slider to isolate a particular land boundary and its building footprints", 13], ["to change the value in the slider, either drag the button left or right or double click to manually input a desired value", 13], ["identify the types of buildings through the comparison of street information in google maps and line data generated in grasshopper", 13], ["change value of", 13], ["land boundary slider", 13], ["to select all building footprint of desired area", 13], ["drag and pull the white tip of", 13], ["closed (drag here", 13], ["and connect to th white tip of one data bubble", 13], ["rename data bubble by right clicking and replacing the name of the bubble using the format", 13], ["item(xx)_(building type", 13], ["where xx refers to the value used in step 9 and", 13], ["building type", 13], ["is either one of these categories", 13], ["landed properties", 13], ["condo", 13], ["commercial", 13], ["hdb", 13], ["right click on the bubble and click \u201cinternalise data\u201d after renaming", 13], ["drag the bubble above the category so as to keep the sorting neat and tidy", 13], ["new updates here", 13], ["customise building height", 14], ["once data has been saved within a data bubble, you may wish to either keep it where it is or bring it over to the appropriate", 14], ["building type", 14], ["category", 14], ["attach the data bubble to the", 14], ["attach here", 14], ["bubble", 14], ["drag the slider or double click and enter your desired building height value for all of the relevant context buildings", 14], ["once all desired data has been saved and connected to its appropriate categories, bake the geometries", 14], ["new updates here", 14], ["customise building texture", 15], ["using rhino, turn display mode to", 15], ["rendered", 15], ["as shown in the image", 15], ["click on the button labelled", 15], ["materials", 15], ["on the right toolbar", 15], ["click on the", 15], ["to import your image and choose", 15], ["picture", 15], ["from the drop down list", 15], ["select the image that you wish to use as your texture (use the images that you have photoshopped or use the ones in the sample package) successful import will result in the left image", 15], ["repeat this until you have uploaded all of the textures you wish to use", 15], ["return to the grasshopper window and locate the component", 15], ["custom preview", 15], ["as shown below", 15], ["place your cursor over", 15], ["material", 15], ["and right click it", 15], ["select the texture you want to use for this particular category", 15], ["note: these steps is applicable to all of the categories, not just for", 15], ["condo", 15], ["customise texture mapping", 16], ["switch back to grasshopper", 16], ["locate the following group, with the component", 16], ["box mapping", 16], ["within - this group can be found within each category", 16], ["while looking at the model through rhino, adjust the slider", 16], ["multiple to texture mapping", 16], ["to suit the texture mapping as required", 16], ["once you are satisfied you may hit ctrl+s to save the script", 16], ["new updates here", 16], ["importing to unity", 17], ["within the rhino window, go to the right toolbar and ensure you are under the", 17], ["layer", 17], ["tab", 17], ["for each of your layer, click on the faint circle, marked in the image", 17], ["assign the desired texture for all the geometries within each layer", 17], ["once all applied, type", 17], ["selall", 17], ["and press enter onto the command bar in the rhino window", 17], ["type", 17], ["export", 17], ["and select", 17], ["fbx", 17], ["for the file type and save under your desired name", 17], ["ensure the export settings are the same as the image below", 17], ["open the unity project that consists of your main model", 17], ["drag and drop the folder that consists of all of your photoshopped textures into the asset section", 17], ["note", 17], ["this step is crucial and", 17], ["skipping it will break the import process", 17], ["from rhino", 17], ["drag and drop your new .fbx file  into the asset section", 17], ["drag and drop the new imported prefab into the main game window", 17], ["congratulations you are have successfully generated the context model of your environment", 17], ["if you wish to change the textures or the texture mappings of individual geometries in unity", 17], ["right click on the prefab that you have just imported from the asset manager window on the left and select", 17], ["unpack prefab completely", 17], ["open up the texture folder", 17], ["drag and drop the texture you want onto the geometry that you wish to modify - if done correctly, only the particular geometry you\u2019ve dragged to will have its texture changed", 17], ["to edit the texture mapping scaling, select the geometry and look to the window on the right", 17], ["expand the material options by clicking on the triangle", 17], ["scroll to", 17], ["tiling", 17], ["and enter a value: >1 will scale the texture up and <1 will scale the texture down", 17], ["new updates here", 17], ["the following infographic describes the 4 step process of building standard assets of singaporean context that can be dragged and used in the future unity models", 18], ["note", 18], ["anything that users might have to take note of", 18], ["new updates here", 18], ["new updates here", 18], ["generation of bus stop asset", 19], ["getting the dimensions of a bus stop", 19], ["specific type", 19], ["general specifications(m", 19], ["generic bus stop", 19], ["shelter", 19], ["height: min 2.2m", 19], ["width: 3m", 19], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 19], ["thickness: 0.2m", 19], ["supporting beams", 19], ["height: 2.2m", 19], ["radius: 0.1x2.2", 19], ["color", 19], ["white", 19], ["grey", 19], ["bus stop that is flushed with kerb", 19], ["height: min 2m", 19], ["width: 3m", 19], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 19], ["bus stop with shelter protruding to road", 19], ["height: 4.8m", 19], ["width: 4.5m", 19], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 19], ["information gotten from", 19], ["lta", 19], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 19], ["select a street in modelling software to place street furniture in", 19], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 19], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 19], ["for the spacing between points, it can be even (for bus stops it is 6m apart) or                                    uneven (to be decided by the user", 19], ["create 2d outline for street furniture, be sure to include pillars and align pillars                                    with arrayed points", 19], ["work into 3d space by extruding the 2d shapes", 19], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 19], ["then, orientate the furniture in the correct direction", 19], ["lastly, group the furniture in an assigned layer and place the bus stop according to                                    points in step 2 if multiple bus stops are required", 19], ["optional: repeat steps 5 to 7 for the complementary furnitures of the bus stop with the                                    generic dimensions as below", 19], ["specific type", 19], ["general specifications(m", 19], ["notice board", 19], ["height: 1.8m", 19], ["width: 1m", 19], ["thickness: 0.15m", 19], ["address plate", 19], ["height: 0.15m", 19], ["width: 1.5m", 19], ["thickness: 0.05m", 19], ["bench", 19], ["bench generation", 19], ["height: 0.45m", 19], ["width: 0.33m", 19], ["length: 1.2m", 19], ["color: grey / brown", 19], ["setback 1.5m from kerb", 19], ["bollard", 19], ["bollard generation", 19], ["height: 0.9m", 19], ["overall width: 0.1m", 19], ["distance apart: 1.5m or 3m", 19], ["color: grey / white", 19], ["information gotten from", 19], ["lta", 19], ["group all objects", 19], ["move desired objects to (0,0,0) point in cad software", 19], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 19], ["new updates here", 19], ["generation of covered walkway asset", 20], ["getting the dimensions of covered walkways", 20], ["specific type", 20], ["general specifications(m", 20], ["overhead bridges", 20], ["shelter", 20], ["height above ground: min 5.7m", 20], ["overall width: min 3m", 20], ["walkable width: min 2.4m", 20], ["thickness of shelter: 0.2m", 20], ["pillar", 20], ["radius: 0.1m", 20], ["height: 3.6m", 20], ["covered walkway on pedestrian paths", 20], ["shelter", 20], ["height above ground: 3.6m", 20], ["overall width: min 3m", 20], ["walkable width: min 2.4m", 20], ["thickness of shelter: 0.2m", 20], ["pillar", 20], ["radius: 0.1m", 20], ["height: 3.6m", 20], ["information gotten from", 20], ["lta", 20], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 20], ["select a street in modelling software to place street furniture in", 20], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 20], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 20], ["for the spacing between points, it can be even (for covered walkways it is 6m apart)                                    or                                    uneven (to be decided by the user", 20], ["create 2d outline for street furniture, be sure to include pillars for supporting                                    the sheltered walkway and align pillars with arrayed points", 20], ["work into 3d space by extruding the 2d shapes", 20], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 20], ["then, orientate the furniture in the correct direction", 20], ["lastly, group the furniture in an assigned layer and place the covered walkway                                    according                                    to                                    points in step 2 if longer walkways are required", 20], ["optional: repeat steps 5 to 7 for the complementary furnitures of covered walkways                                    with the                                    generic dimensions as below", 20], ["specific type", 20], ["general specifications(m", 20], ["bus stop", 20], ["bus stop generation", 20], ["shelter", 20], ["height: min 2.2m", 20], ["width: 3m", 20], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 20], ["thickness: 0.2m", 20], ["supporting beams", 20], ["height: 2.2m", 20], ["radius: 0.1x2.2", 20], ["color", 20], ["white", 20], ["grey", 20], ["safety railing", 20], ["height: 0.9m - 1.1m", 20], ["information gotten from", 20], ["lta", 20], ["group all objects", 20], ["move desired objects to (0,0,0) point in cad software", 20], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 20], ["new updates here", 20], ["generation of bench asset", 21], ["getting the dimensions of benches", 21], ["specific type", 21], ["general specifications(m", 21], ["generic bench", 21], ["height: 0.45m", 21], ["overall width: 0.33m", 21], ["length: 1.2m", 21], ["thickness of seat: 0.1m", 21], ["color", 21], ["grey", 21], ["brown", 21], ["amber", 21], ["green", 21], ["information gotten from", 21], ["lta", 21], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 21], ["select a street in modelling software to place street furniture in", 21], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 21], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 21], ["for the spacing between points, it can be even or                                    uneven (to be decided by the user", 21], ["create 2d outline for street furniture, be sure to include legs for bench and align                                    legs with arrayed points", 21], ["work into 3d space by extruding the 2d shapes", 21], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 21], ["then, orientate the furniture in the correct direction", 21], ["lastly, group the furniture in an assigned layer and place the benches according to                                    points in step 2 if multiple bus stops are required", 21], ["optional: repeat steps 5 to 7 for the complementary furnitures of benches with the                                    generic dimensions as below", 21], ["specific type", 21], ["general specifications(m", 21], ["bus stop", 21], ["bus stop generation", 21], ["shelter", 21], ["height: min 2.2m", 21], ["width: 3m", 21], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 21], ["thickness: 0.2m", 21], ["supporting beams", 21], ["height: 2.2m", 21], ["radius: 0.1x2.2", 21], ["color", 21], ["white", 21], ["grey", 21], ["information gotten from", 21], ["lta", 21], ["group all objects", 21], ["move desired objects to (0,0,0) point in cad software", 21], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 21], ["new updates here", 21], ["generation of bollard asset", 22], ["getting the dimensions of bollards", 22], ["specific type", 22], ["general specifications(m", 22], ["generic bollard", 22], ["height: 0.9m", 22], ["overall width: 0.1m", 22], ["distance apart: 1.5m or 3m", 22], ["color", 22], ["grey", 22], ["white", 22], ["information gotten from", 22], ["lta", 22], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 22], ["select a street in modelling software to place street furniture in", 22], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 22], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 22], ["for the spacing between points, it can be even (for bollards it is 1.5m or 3m apart)                                    or uneven (to be decided by the user", 22], ["create 2d outline for street furniture", 22], ["work into 3d space by extruding the 2d shapes", 22], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 22], ["then, orientate the furniture in the correct direction", 22], ["lastly, group the furniture in an assigned layer and place the bollards according to                                    points in step 2 if multiple bollards are required", 22], ["optional: repeat steps 5 to 7 for the complementary furnitures of bollards with the                                    generic dimensions as below", 22], ["specific type", 22], ["general specifications(m", 22], ["bus stop", 22], ["bus stop generation", 22], ["shelter", 22], ["height: min 2.2m", 22], ["width: 3m", 22], ["length: increments of 3m starting from 6m up to 36m depending on                                                    number of commuters", 22], ["thickness: 0.2m", 22], ["supporting beams", 22], ["height: 2.2m", 22], ["radius: 0.1x2.2", 22], ["color", 22], ["white", 22], ["grey", 22], ["information gotten from", 22], ["lta", 22], ["group all objects", 22], ["move desired objects to (0,0,0) point in cad software", 22], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 22], ["new updates here", 22], ["generation of post box asset", 23], ["getting the dimensions of post boxes", 23], ["specific type", 23], ["general specifications(m", 23], ["traffic light vertical", 23], ["housing for 3 lights (red, amber, green):", 23], ["length: 0.2m", 23], ["breadth: 0.2m", 23], ["height: 0.6m", 23], ["pole", 23], ["radius: 2.29m", 23], ["height: 0.05m", 23], ["color", 23], ["grey", 23], ["overhead traffic light", 23], ["housing for 3 lights (red, amber, green):", 23], ["length: 0.9m", 23], ["breadth: 0.3m", 23], ["height: 0.3m", 23], ["pole", 23], ["radius: 0.05m", 23], ["height: 5.2m", 23], ["color", 23], ["grey", 23], ["information gotten from", 23], ["imda", 23], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 23], ["select a street in modelling software to place street furniture in", 23], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 23], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 23], ["for the spacing between points, it can be even or                                    uneven (to be decided by the user", 23], ["create 2d outline for street furniture", 23], ["work into 3d space by extruding the 2d shapes", 23], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 23], ["then, orientate the furniture in the correct direction", 23], ["lastly, group the furniture in an assigned layer and place the letter boxes according                                    to                                    points in step 2 if multiple post boxes are required", 23], ["group all objects", 23], ["move desired objects to (0,0,0) point in cad software", 23], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 23], ["new updates here", 23], ["generation of street sign asset", 24], ["getting the dimensions of street signs", 24], ["specific type", 24], ["general specifications(m", 24], ["generic street sign", 24], ["board (length x height x thickness", 24], ["type 1: 1.3m x 1.5m x 0.005m", 24], ["type 2: 0.2m x 2.2m x 0.005m", 24], ["pole", 24], ["radius: 0.02m", 24], ["height: 2.5m", 24], ["single street sign", 24], ["board (length x height x thickness", 24], ["type 1: 0.6m x 0.3m x 0.005m", 24], ["type 2: 0.9m x 0.35m x 0.005m", 24], ["pole", 24], ["radius: 0.02m", 24], ["height: 2.5m", 24], ["information gotten from", 24], ["lta", 24], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 24], ["select a street in modelling software to place street furniture in", 24], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 24], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 24], ["for the spacing between points, it can be even or                                    uneven (to be decided by the user", 24], ["create 2d outline for street furniture, be sure to include poles and align poles                                    with arrayed points", 24], ["work into 3d space by extruding the 2d shapes", 24], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 24], ["then, orientate the furniture in the correct direction", 24], ["lastly, group the furniture in an assigned layer and place the street sign according                                    to                                    points in step 2 if multiple street signs are required", 24], ["group all objects", 24], ["move desired objects to (0,0,0) point in cad software", 24], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 24], ["new updates here", 24], ["generation of street lighting asset", 25], ["getting the dimensions of street lightings", 25], ["specific type", 25], ["general specifications(m", 25], ["traffic light vertical", 25], ["housing for 3 lights (red, amber, green):", 25], ["length: 0.2m", 25], ["breadth: 0.2m", 25], ["height: 0.6m", 25], ["pole", 25], ["radius: 2.29m", 25], ["height: 0.05m", 25], ["color", 25], ["grey", 25], ["overhead traffic light", 25], ["housing for 3 lights (red, amber, green):", 25], ["length: 0.9m", 25], ["breadth: 0.3m", 25], ["height: 0.3m", 25], ["pole", 25], ["radius: 0.05m", 25], ["height: 5.2m", 25], ["color", 25], ["grey", 25], ["information gotten from", 25], ["lta", 25], ["and", 25], ["sso", 25], ["open modelling software.                                    ensure that the correct dimension (mm or m) settings are selected", 25], ["select a street in modelling software to place street furniture in", 25], ["if there is no street that you would like to reference to, create a new street. the                                    new street can be created by                                    creating a ground plane in one layer and work in 2d space (line with dimension of                                    2.2m for one lane) to 3d space (plane", 25], ["layer street with points and decide whether points are parallel or perpendicular to                                    the street", 25], ["for the spacing between points, it can be even or                                    uneven (to be decided by the user", 25], ["create 2d outline for street furniture. traffic lights have different components (lights, housing and pole", 25], ["work into 3d space by extruding the 2d shapes", 25], ["add realism to the 3d object by adding texture and color                                    (under the material section in rhino cad software, where changes reflected in                                    rendered view", 25], ["then, orientate the furniture in the correct direction", 25], ["lastly, group the furniture in an assigned layer and place the street lights according                                    to                                    points in step 2 if multiple street lights are required", 25], ["group all objects", 25], ["move desired objects to (0,0,0) point in cad software", 25], ["ensure saved views (named views for rhinoceros) are deleted. export objects into                                    compatible file format for the digital environment (.fbx for unity", 25], ["new updates here", 25], ["utilising the standard asset library in unity", 26], ["after creating the standard asset library, we can need to import it into unity to utilise                            them in our simulations", 26], ["drag in the street furniture into the unity scene", 26], ["click on street furniture and uncheck box under the inspector tab \u2192 model \u2192 \u201cimport                                    cameras\u201d", 26], ["click \u201capply\u201d", 26], ["click on the \u201chierarchy\u201d tab, right click on the imported street furniture, and                                    select \u201cunpack prefab\u201d", 26], ["select camera views (front, right, top, perspective) and delete. after this action,                                    the \u201cobject\u201d should only have street furniture component", 26], ["new updates here", 26], ["to understand what the vehicle simulation is about, the following infographic covers the features and flow", 27], ["pre-requisites", 28], ["the vehicle simulation was built with polarith ai, and to use it, make sure you have the following installed", 28], ["plugins", 28], ["polarith ai pro", 28], ["note", 28], ["for the vehicle simulation to work, you may download the", 28], ["free version", 28], ["instead. however, since                                                 the pedastrian simulation uses the pro version, you are adviced to obtain the pro version instead", 28], ["information correct as of 6th july 2020", 28], ["spawn point", 29], ["to begin, you must have a starting point where vehicles enter the simulation", 29], ["find a suitable location for the vehicle to start the simulation. this can be any entrypoint, such as the entrance to the building, etc", 29], ["drag the", 29], ["lotobject", 29], ["prefab from assets > vehicle simulation > carpark driving", 29], ["adjust it such that the taller box is facing the front of the intended direction, and name it", 29], ["spawn point", 29], ["to prevent any confusion later on", 29], ["under the spawnpoint gameobject, add the component \u201cpooling\u201d", 29], ["fill in the following", 29], ["spawn area", 29], ["permissiblebounds", 29], ["gameobject under the spawnpoint", 29], ["front", 29], ["lotfacingtrigger", 29], ["gameobject under the spawnpoint", 29], ["min spawn delay: minimum time in seconds for the next vehicle to appear (any value more than 4", 29], ["max spawn delay: maximum time in seconds for the next vehicle to appear", 29], ["vehicle prefab", 29], ["fordfocus_white ai_controlled", 29], ["prefab object from assets > vehicle simulation > carpark driving", 29], ["for now, we will leave the aim decision points to be 0. this will be changed later on after the state machine has been set up", 29], ["new updates here", 29], ["state machine animator", 30], ["first, you have to set up your unique state machine for your simulation. this state machine will determine your vehicle\u2019s flow as they enter the simulation, which possible states and when to exit", 30], ["you can duplicate the", 30], ["parking", 30], ["animator controller from assets > vehicle simulation > animation for reference. remember to label each state with a unique number to use later on for the polarith ai module", 30], ["select each transition and make sure the conditions are set correctly. that is", 30], ["change equals <value of next unique state number", 30], ["finally, go to", 30], ["aicontroller", 30], ["which is located at assets > vehicle simulation > carparkdriving, to change the animator controller to the new state model you just created", 30], ["new updates here", 30], ["straight lines", 31], ["we first begin with a simple movement, just to move forward", 31], ["right click on the hierarchy, and select", 31], ["create empty", 31], ["drag the gameobject to the end of the straight road in which the spawn point is located on, and name it something like", 31], ["straightroad1", 31], ["go to the", 31], ["aicontroller", 31], ["prefab located in assets > vehicle simulation > carparkdriving. this aicontroller will be used for the vehicle spawned", 31], ["in the inspector window, click", 31], ["add component", 31], ["and add", 31], ["aimfollow", 31], ["now, give that aimfollow component a label name (for example, spawntodrive", 31], ["click on the", 31], ["spawnpoint", 31], ["gameobject we created earlier and plus one to the size of the", 31], ["aim decision points", 31], ["fill in the following accordingly", 31], ["name or label: label of aimfollow we gave earlier on (spawntodrive", 31], ["aim object: type of aim (aimfollow, aimorbit, etc", 31], ["decision point: gameobject we created at step 3", 31], ["finally, go to the state machine animator and add in spawntodrive as an allowed behaviour at the beginning", 31], ["new updates here", 31], ["turning around bends", 32], ["before you start on this section, make sure that you have completed the previous section", 32], ["straight line movement", 32], ["create an empty gameobject", 32], ["drag it to the corner which the turn is at, and name it something distinct such as \u201cturn1\u201d", 32], ["go to the", 32], ["aicontroller", 32], ["prefab located in assets > vehicle simulation > carparkdriving. in the inspector window, click", 32], ["add component", 32], ["and add", 32], ["aimorbit", 32], ["click on the running man icon, and fill in the following accordingly", 32], ["name or label: distinct label describing this behaviour", 32], ["plane: xz plane", 32], ["radius: start off with 10, we will finetune accordingly later", 32], ["delta angle: also start with -6, we will finetune later accordingly (positive value when turning clockwise, negative value when counter-clockwise", 32], ["then, add the this decision point to the spawn point as an", 32], ["aimorbit", 32], ["object", 32], ["also, add this label to the animator as an allowed behaviour", 32], ["we also have to take into account the straight road that the vehicle will travel along after it has completed the turn. hence, follow the exact same steps again to create the next aimfollow behaviour", 32], ["create gameobject and place it at the end of the straight road, name it", 32], ["add component \u201caimfollow\u201d in aicontroller and name it", 32], ["add the subsequent decision point in the spawn point", 32], ["add the label as an allowed behaviour in the animator", 32], ["at this point, you should have the following", 32], ["animator with 3 different states, each state having an allowed behaviour", 32], ["aicontroller module with 2 aimfollow and 1 aimorbit components", 32], ["spawnpoint with 3 decision points", 32], ["however, there needs to have a trigger to allow the state to transit from one to another. hence, we need to create these triggers", 32], ["right click on the hierarchy and create a new cube 3d object", 32], ["drag it to the spot right before the turn is executed, and name it something you know. in addition, disable the mesh renderer as well as check the", 32], ["is trigger", 32], ["box", 32], ["now, add the component \u201ctrigger state transition\u201d", 32], ["since this is to change the state from 0 (normal driving) to 1 (turning), the values will be the following", 32], ["change: 1 (final state value", 32], ["probability: 1 (any number between 0-1 to determine if the vehicle will turn or not", 32], ["is braking zone: checked (to allow for deceleration before turning", 32], ["repeat steps 14-16, but this time drag the gameobject to the end of the turn. the values will be the following", 32], ["change: 2 (final state value", 32], ["probability: 1 (to complete the turn", 32], ["finally, you have a complete turn. remember to fine tune the turning in step 6 by adjusting the parameters, or shifting the trigger created in steps 12-17", 32], ["new updates here", 32], ["carpark simulation", 33], ["before you start this, make sure that you have located the carpark you want to simulate, and the vehicle\u2019s last movement is to reach the carpark, with a trigger to change the state to", 33], ["carpark", 33], ["state", 33], ["drag the", 33], ["lotobject", 33], ["prefab from assets > vehicle simulation > carparkdriving. align it such that the taller cube is facing the front of the lot", 33], ["change the", 33], ["change", 33], ["value under", 33], ["trigger state transition", 33], ["in the lotobject > permissiblebounds to the same state value as the \u201cparked\u201d state in your animator state model", 33], ["duplicate for all the carpark lots, and group them under an empty gameobject. name them something intuitive like", 33], ["carparkobjects", 33], ["create another box collider (similar to a trigger), and place it at the entrance of the carpark you want to simulate. make sure you place it a little behind the trigger object (the one that switches the state to", 33], ["carpark", 33], ["add the component", 33], ["teleporter", 33], ["to the box collider object", 33], ["fill up the", 33], ["teleporter", 33], ["with the following parameters", 33], ["carpark object: the group of lotobject you placed in step 3", 33], ["spawn delay: random time taken for the car to appear parked", 33], ["next state: copy the next state label from the state machine animator", 33], ["others: leave the", 33], ["towards", 33], ["unchecked", 33], ["done! your carpark simulator should be running smoothly now", 33], ["new updates here", 33], ["despawn point", 34], ["to create a place where vehicles will be despawned, so that they won\u2019t be all stuck in the simulation, you can do the following", 34], ["create a box collider object, and place it where you want the vehicles to vanish", 34], ["add component", 34], ["vehicledespawn", 34], ["now if a vehicle enters the box collider, they will disappear", 34], ["new updates here", 34], ["the following infographic describes the process of setting up and using the                         pedestrian simulation feature", 35], ["note", 35], ["anything that users might have to take note of", 35], ["new updates here", 35], ["new updates here", 35], ["pre-requisites", 36], ["the pedestrian simulation feature is built with an automatic pathfinding ai", 36], ["before you begin, ensure that you have the following installed", 36], ["software", 36], ["polarith                                    ai", 36], ["note", 36], ["after obtaining the license for polarith ai, import it into assets in                            unity. restart unity if required", 36], ["information correct as of 6th july 2020", 36], ["basic information for polarith ai", 37], ["to start off, here are some basic information about some of the frequently used features in                            polarith ai", 37], ["adding polarith ai components", 37], ["under the inspector tab of each prefab in unity, there is a \u201cadd component\u201d button at the                            bottom. simply type in the polarith ai component names to implement them with the prefab", 37], ["different properties of polarith ai components", 37], ["once polarith ai components have been added, here are the different tabs of properties that                            you would need to instantiate to configure the ai movement", 37], ["main properties", 37], ["reactive properties", 37], ["environment properties", 37], ["indicator properties", 37], ["new updates here", 37], ["classifying objects in the scene", 38], ["looking at the model, identify the possible areas where the pedestrian simulation                                    might take place", 38], ["identify the walking surfaces and the possible obstacles that the agents might                                    encounter while traversing through the site", 38], ["attach a", 38], ["mesh collider", 38], ["to each of these objects such that agents                                    will not fall through the ground or walk through obstacles", 38], ["based on the different types of buildings in your site, create layers in unity\u2019s                                    layer system i.e. benches, other pedestrians", 38], ["create an empty gameobject and label it based on the different layers of your site                                    model", 38], ["add the", 38], ["aim environment", 38], ["component to the gameobject and assign the                                    corresponding layer under the \u201clayers\u201d parameter. attached a screenshot for the                                    \u201cobstacles\u201d environment", 38], ["you may assign multiple layers to a single", 38], ["aim environment", 38], ["object", 38], ["select all the objects that you want the agent to perceive as a certain type of                                    object and assign them to the corresponding layer", 38], ["create another empty gameobject and label it as \u201cperceiver\u201d. attach the", 38], ["aim                                        steering perceiver", 38], ["component to this gameobject and add the                                    corresponding", 38], ["aim environment", 38], ["objects that you have created under                                    the \u201cenvironments\u201d tab", 38], ["new updates here", 38], ["building the waypoint system", 39], ["by being able to construct different kinds of pathways, we are able to accomodate for                            different kinds of scenarios and behaviours", 39], ["create an empty gameobject and give it a name that you would like to name this path.                                    then, attach the", 39], ["aim linear path", 39], ["component to the gameobject", 39], ["change the point count to 1 and a green sphere will pop out, this green sphere is the                                    end point of the path", 39], ["click on shortcuts to access the list of shortcuts on how to add points or remove                                    points etc (which may differ for different os", 39], ["you may click on reverse if you would like to reverse the pathway, otherwise you set                                    the variability when we are", 39], ["scaling up the simulation", 39], ["new updates here", 39], ["basic setup of the agents", 40], ["in order for the agents to effectively interact with the environment, basic parameters like                            physics interactions has to be set first", 40], ["for the purpose of our simulation, we have purchased", 40], ["advancedpeoplepack2", 40], ["where the following settings have already been saved in the prefabs", 40], ["however, in the case where a different assest is used", 40], ["click and drag in a prefab of your agent into the scene", 40], ["attach a", 40], ["rigidbody", 40], ["component to the agent and ensure than \"use                                    gravity\" is checked", 40], ["attach a", 40], ["box collider", 40], ["component to the agent and edit the bounding                                    volume such that the it matches the agent in such a manner", 40], ["attach a", 40], ["root motion controller", 40], ["component to the agent", 40], ["note: the context object to be attached to this component will be instantiated in", 40], ["step 2", 40], ["of", 40], ["configuring agent behaviours", 40], ["attach a", 40], ["aim simple controller", 40], ["component to the agent where the                                    default values should be sufficient", 40], ["note: the context object to be attached to this component will be instantiated in", 40], ["step 2", 40], ["of", 40], ["configuring agent behaviours", 40], ["new updates here", 40], ["configuring agents behaviours using polarith ai", 41], ["polarith ai components allows the agent to follow waypoints, avoid obstacles and other                            pedestrians which are fundamental to a realistic pedestrian simulation", 41], ["for the purpose of our simulation, we have purchased", 41], ["advancedpeoplepack2", 41], ["where the following settings have already been saved in the prefabs", 41], ["however, in the case where a different assest is used", 41], ["under the agent, create an empty gameobject and label it as \"ai", 41], ["under the ai object, attach the", 41], ["aim context", 41], ["component", 41], ["instantiate the values as shown as below", 41], ["attach the", 41], ["aim steering filter", 41], ["component", 41], ["select the perceiver that you created in", 41], ["step 5", 41], ["of", 41], ["classifying objects", 41], ["under the steering perceiver tab", 41], ["attach the", 41], ["aim follow waypoints", 41], ["component", 41], ["this component allows your agent to follow the waypoint systems that you created in", 41], ["building waypoints", 41], ["we will go more in depth under", 41], ["scaling up the simulation", 41], ["attach the", 41], ["aim seek", 41], ["component", 41], ["this component notifies your agent to avoid the", 41], ["obstacles", 41], ["that you                                    have classified in", 41], ["classifying objects", 41], ["modify the parameters for the reactive and environment properties as follow", 41], ["attach the", 41], ["aim avoid", 41], ["component", 41], ["this component notifies your agent to avoid other", 41], ["pedestrians", 41], ["that                                    you have classified in", 41], ["classifying objects", 41], ["modify the parameters for the reactive and environment properties as follow", 41], ["attach the", 41], ["aim stabilization", 41], ["component where the default parameters should be sufficient", 41], ["stabilization ensures that an agent holds its current movement direction, and thus,                                    appears to have a much smoother overall movement", 41], ["new updates here", 41], ["scaling up the simulation", 42], ["disclaimer: this section is built on from the", 42], ["building waypoints system", 42], ["and", 42], ["configure agent behaviours", 42], ["sections,                            please refer to those sections if you have not", 42], ["for this section, we would like to scale up the simulation by repeating a few same steps to                            create a large                            system of different waypoints to represent a                            realistic pedestrian simulation", 42], ["furthermore, we need to vary the behaviours that agents have on the same waypoints to                            make it even more realistic", 42], ["the first option is that for the", 42], ["aim linear path", 42], ["object that you                                    have created, you may click on", 42], ["reverse", 42], ["to reverse the end point                                    (indicated by the green sphere) of the route", 42], ["with the", 42], ["aim linear path", 42], ["object that you have constructed, click                                    and drag agents onto different                                    portions of the route and rotate                                    them in the direction that you would like them to travel", 42], ["select the agent that you would like to configure first. click on the point on the", 42], ["aim linear path", 42], ["object closest to the agent and note the index. the                                    point selected will be                                    indicated by the orange dot in the middle.                                    the index counting starts from 0 from the first point, where in this case below the                                    index of the point is 4", 42], ["click on the agent that you would like to configure and go to the", 42], ["aim follow                                        waypoints", 42], ["component", 42], ["under the enviroment properties, assign it the corresponding", 42], ["aim linear path", 42], ["object", 42], ["on the same", 42], ["aim follow waypoints", 42], ["component, under the reactive                                    properties", 42], ["set target index to the index you found in", 42], ["step 2", 42], ["step size to 1 where the agent follows the forward sequence, or                                        step size to -1 where the agent follows the backward sequence", 42], ["set patrol to circular", 42], ["repeat steps 3 to 5 for all other agents on the particular", 42], ["aim linear                                        path", 42], ["object", 42], ["build another", 42], ["aim linear path", 42], ["object", 42], ["building waypoints system", 42], ["and repeat steps 2 to 6 of this section", 42], ["new updates here", 42]], "searchIndex": {"below": [0, 416, 905, 461, 302, 366, 240, 209, 850, 60, 29], "find": [0, 140, 619, 60], "minimum": [0, 1, 634], "requirements": [0, 1, 17], "run": [0], "framework": [0, 60], "actual": [0], "performance": [0], "rendering": [0, 70], "quality": [0], "may": [0, 224, 897, 163, 613, 808, 809, 151, 792, 185, 60, 29], "vary": [0, 894], "depending": [0, 289, 424, 274, 469, 374, 285], "complexity": [0], "your": [0, 130, 131, 132, 133, 134, 642, 141, 787, 788, 154, 818, 51, 191, 202, 205, 210, 731, 862, 869, 230, 748, 877, 239, 241, 242, 247, 249, 125], "project": [0, 70, 60, 241, 51, 125, 55, 24, 27, 28, 29], "windows": [48, 2, 6], "macos": [3], "linux": [4], "support": [10, 11, 4, 12], "preview": [208, 4], "operating": [5, 22], "system": [802, 5, 925, 787, 20, 889, 28, 893], "version": [5, 614, 615, 122, 28], "7": [416, 6, 8, 461, 302, 366], "sp1": [6], "10": [690, 6], "64-bit": [6], "versions": [6], "sierra": [7], "10.12.6": [7], "ubuntu": [8], "16.04": [8], "18.04": [8], "centos": [8], "cpu": [9], "x64": [10, 11, 12], "architecture": [10, 11, 12], "sse2": [10, 11, 12], "instruction": [10, 11, 12], "graphics": [20, 13], "api": [13], "dx10": [14], "dx11": [14], "dx12-capable": [14], "gpus": [16, 14, 15], "metal-capable": [15], "intel": [15], "amd": [16, 20, 15], "opengl": [16], "3.2": [16], "vulkan-capable": [16], "nvidia": [16, 20], "additional": [17], "hardware": [18], "vendor": [18], "officially": [18, 19], "supported": [18, 19, 20, 22], "drivers": [18, 19], "apple": [19], "gnome": [20], "desktop": [20, 44], "environment": [131, 388, 521, 778, 20, 790, 791, 793, 799, 555, 813, 436, 330, 75, 597, 481, 873, 881, 249], "running": [20, 748, 22, 687], "top": [98, 130, 132, 20, 605], "x11": [20], "windowing": [20], "official": [20], "proprietary": [20], "driver": [20], "mesa": [20], "other": [69, 70, 841, 877, 787, 20, 919], "configuration": [20], "user": [513, 547, 455, 296, 360, 589, 20, 410], "provided": [122, 139, 20], "stock": [20], "distribution": [20], "kernel": [20], "compositor": [20], "etc": [672, 808, 619, 20], "\u00a0\u00a0\u00a0": [21], "all": [386, 519, 22, 919, 154, 795, 28, 168, 553, 434, 191, 192, 328, 206, 595, 86, 214, 92, 732, 479, 231, 232, 751, 242], "systems": [862, 22], "unity": [768, 388, 261, 773, 521, 22, 555, 436, 59, 70, 330, 75, 80, 82, 597, 87, 88, 599, 600, 601, 481, 226, 241, 250], "editor": [22], "workstations": [22], "laptop": [22], "form": [22], "factors": [22], "without": [22], "emulation": [22], "container": [22], "compatibility": [22], "layer": [512, 518, 787, 22, 791, 408, 409, 795, 415, 545, 546, 294, 295, 552, 301, 453, 454, 587, 460, 588, 594, 228, 230, 231, 358, 359, 365, 511], "area:none": [23], "up": [642, 259, 138, 893, 143, 274, 24, 285, 289, 424, 810, 469, 865, 739, 100, 757, 374, 887, 253, 639], "there": [545, 705, 408, 294, 358, 453, 773, 43, 587, 60, 24, 28, 511], "files": [51, 55, 24, 60, 29], "software": [387, 516, 520, 765, 406, 407, 24, 413, 543, 544, 292, 293, 550, 554, 299, 435, 451, 452, 69, 70, 71, 329, 458, 585, 586, 592, 596, 480, 356, 357, 106, 363, 108, 509, 510], "well": [24, 707, 143], "plugins": [610, 106, 110, 24, 25, 122], "download": [131, 613, 124, 117, 24, 25, 122, 120, 29], "following": [261, 25, 670, 161, 47, 687, 49, 816, 701, 711, 75, 715, 844, 218, 607, 609, 100, 741, 107, 751, 627, 757, 764], "sections": [25, 145, 892], "we": [653, 25, 668, 671, 673, 803, 809, 814, 690, 691, 696, 60, 705, 70, 842, 83, 600, 864, 893, 894, 639], "guide": [25], "through": [165, 783, 786, 25, 221], "them": [732, 773, 70, 902, 151, 600, 25, 122, 795, 60, 157], "whereas": [25], "specific": [417, 485, 392, 268, 525, 334, 367, 303, 462, 559, 440, 25], "taught": [25], "where": [516, 905, 782, 917, 25, 28, 157, 413, 550, 299, 174, 816, 817, 185, 834, 458, 844, 845, 592, 618, 363, 751, 752, 884], "reach": [25, 721], "require": [25], "usage": [25], "information": [384, 769, 770, 771, 137, 404, 151, 154, 26, 541, 290, 165, 432, 449, 68, 581, 326, 74, 477, 354, 616, 123, 507], "correct": [769, 517, 406, 26, 29, 414, 543, 292, 551, 300, 451, 68, 585, 74, 459, 593, 356, 616, 364, 123, 509], "6th": [769, 68, 616, 74, 26, 123], "july": [769, 58, 68, 616, 74, 26, 123], "2020": [769, 58, 68, 616, 74, 26, 123, 31], "repository": [27, 37, 46], "uses": [28, 615], "github": [32, 37, 44, 28, 29], "control": [28], "assets": [768, 261, 645, 650, 683, 622, 60, 660, 726, 28, 61, 638], "scripts": [28], "stored": [28], "event": [60, 29], "able": [803, 29, 157], "obtain": [29, 615], "dropbox": [29, 30], "link": [50, 43, 30], "expires": [31], "25th": [31], "september": [31], "security": [31], "reasons": [31], "steps": [32, 416, 715, 44, 461, 302, 47, 366, 718, 214, 919, 696, 57, 893, 926], "make": [33, 609, 677, 646, 721, 894, 734], "sure": [33, 609, 548, 677, 646, 361, 297, 721, 411, 734], "have": [129, 642, 897, 902, 263, 775, 892, 894, 800, 33, 677, 38, 44, 814, 816, 51, 53, 696, 60, 701, 705, 842, 844, 77, 205, 206, 590, 718, 721, 83, 605, 609, 102, 871, 618, 107, 879, 885, 759, 249, 251, 764, 254], "git": [57, 34, 50, 54], "installed": [609, 35, 107, 44, 55, 764], "go": [160, 864, 674, 227, 36, 648, 681, 906, 658, 127], "don't": [38], "access": [808, 38], "request": [39], "me": [40], "click": [897, 902, 903, 906, 140, 141, 654, 661, 666, 164, 808, 41, 809, 683, 687, 818, 181, 191, 706, 198, 201, 212, 89, 602, 603, 604, 93, 94, 95, 96, 97, 230, 251], "code": [42], "copy": [744, 43], "follow": [841, 873, 907, 44, 47, 881, 913, 696, 57, 860, 862], "here": [640, 771, 260, 389, 135, 264, 265, 522, 651, 775, 780, 158, 927, 801, 675, 170, 811, 556, 45, 50, 437, 183, 189, 193, 839, 331, 78, 79, 719, 598, 90, 606, 225, 482, 99, 103, 104, 749, 756, 886, 760, 761], "clone": [50, 46], "open": [509, 451, 292, 356, 585, 138, 143, 48, 241, 406, 253, 543], "command": [48, 234], "prompt": [48], "terminal": [48], "mac": [48], "key": [49], "copied": [50], "done": [51, 748, 254], "local": [51], "computer": [51], "now": [710, 748, 51, 755, 665, 639], "note": [262, 263, 905, 154, 52, 56, 828, 835, 76, 77, 81, 214, 612, 101, 102, 243, 758, 759, 121, 767], "do": [129, 154, 53, 751], "lfs": [54], "some": [771, 55], "might": [102, 70, 263, 759, 77, 782, 783, 55, 57, 154], "missing": [55], "common": [57], "problems": [57], "include": [548, 361, 297, 57, 411], "improper": [57], "installation": [57, 122], "please": [57, 122, 892], "installing": [57], "correctly": [57, 646, 254], "section": [516, 677, 550, 458, 299, 363, 893, 592, 242, 888, 149, 247, 152, 58, 155, 413, 926], "last": [721, 58], "updated": [58], "5th": [58], "asset": [483, 390, 599, 266, 523, 332, 557, 251, 242, 438, 247, 600, 59, 92], "store": [59], "several": [60], "dependencies": [60], "built": [609, 106, 888, 763, 60], "but": [715, 60, 85], "want": [752, 721, 213, 254, 795, 60, 734], "original": [60], "purchase": [60], "polarith": [768, 609, 770, 611, 771, 645, 772, 773, 774, 775, 840, 841, 766, 62], "ai": [768, 609, 770, 611, 771, 645, 772, 773, 774, 775, 840, 841, 766, 846, 847, 763, 62], "pro": [611, 62, 615], "pedastrian": [615, 63], "vehicle": [609, 613, 645, 713, 650, 619, 683, 622, 755, 660, 726, 696, 634, 635, 636, 63, 638, 607], "simulations": [600, 63], "easyroads3d": [64], "v3": [64], "generating": [65], "roads": [65, 151], "progressively": [65], "probuilder": [66, 92], "convert": [67], "drawn": [67], "bim": [67], "models": [67, 261, 70, 80, 84, 91], "into": [768, 515, 388, 137, 521, 145, 151, 412, 161, 163, 549, 298, 555, 818, 436, 696, 67, 70, 457, 330, 591, 80, 82, 597, 86, 87, 88, 600, 601, 481, 362, 242, 247, 248], "gameobjects": [67], "easy": [67], "world": [67], "manipulation": [67], "mostly": [70], "drawing": [70], "before": [707, 764, 677, 70, 714, 107, 721, 92], "importing": [226, 70, 75, 80, 82], "more": [864, 634, 894, 70], "important": [70], "were": [70], "designer": [70], "rhino": [516, 137, 138, 142, 413, 162, 550, 299, 195, 72, 458, 75, 592, 221, 227, 234, 363, 116, 117, 246, 119], "6": [72, 138, 109, 718, 691, 116, 117, 926], "photoshop": [73], "infographic": [100, 261, 75, 757, 607], "describes": [757, 75, 100, 261], "process": [100, 261, 75, 83, 245, 757], "processing": [75, 92], "while": [75, 221, 783], "anything": [759, 77, 102, 263], "users": [759, 77, 102, 263], "take": [102, 263, 77, 782, 759, 696], "new": [640, 260, 389, 135, 264, 265, 522, 650, 651, 780, 408, 158, 927, 545, 801, 675, 294, 811, 556, 437, 183, 193, 706, 453, 839, 331, 587, 78, 79, 719, 598, 90, 606, 225, 482, 99, 358, 103, 104, 749, 760, 756, 886, 247, 248, 761, 511], "updates": [640, 260, 389, 135, 264, 265, 522, 651, 780, 158, 927, 801, 675, 811, 556, 437, 183, 193, 839, 331, 78, 79, 719, 598, 90, 606, 225, 482, 99, 103, 104, 749, 756, 886, 760, 761], "avoid": [869, 841, 875, 877, 82], "obj": [82, 86, 87], "file": [481, 388, 134, 521, 330, 139, 555, 141, 239, 82, 436, 85, 597, 247, 88], "cause": [82], "model": [249, 650, 782, 241, 82, 83, 788, 85, 86, 221, 89, 602, 731, 92, 93], "crash": [82], "thus": [83, 885], "devised": [83], "general": [418, 486, 393, 269, 526, 335, 304, 368, 463, 83, 560, 441], "exporting": [83], "ensure": [388, 521, 406, 543, 292, 555, 436, 821, 451, 585, 330, 84, 597, 481, 227, 356, 107, 240, 122, 764, 509], "materials": [84, 199], "applied": [232, 84], "accordingly": [687, 690, 691, 84, 670], "export": [481, 388, 521, 330, 555, 236, 240, 436, 85, 86, 597], "fbx": [481, 388, 521, 330, 555, 238, 436, 85, 597, 247, 88], "retains": [85], "mapping": [255, 85, 216, 219, 222, 223], "properties": [774, 775, 776, 777, 778, 779, 873, 909, 177, 881, 914, 85, 154], "textures": [106, 206, 242, 85, 86, 87, 250], "themselves": [85], "circumvent": [86], "issue": [86], "separate": [154, 86], "folder": [242, 253, 86, 87], "one": [545, 705, 453, 294, 358, 171, 587, 141, 176, 86, 408, 668, 734, 511], "place": [518, 782, 407, 415, 544, 293, 552, 301, 697, 452, 586, 460, 210, 594, 86, 734, 357, 365, 751, 752, 510], "import": [768, 202, 600, 205, 245, 87, 88], "select": [646, 903, 139, 141, 654, 407, 795, 544, 162, 293, 168, 452, 586, 205, 213, 854, 89, 604, 93, 94, 95, 96, 605, 357, 237, 251, 510, 255], "parent": [89, 93], "component": [773, 140, 908, 914, 662, 791, 665, 798, 806, 684, 821, 824, 698, 827, 828, 834, 835, 710, 207, 849, 853, 89, 218, 605, 93, 861, 736, 862, 98, 868, 869, 876, 877, 753, 626, 884], "right": [140, 141, 654, 162, 164, 172, 181, 706, 707, 200, 212, 89, 604, 605, 93, 94, 96, 227, 251, 255], "": [96, 318, 325, 645, 638, 650, 683, 622, 660, 726, 254, 120, 89, 731, 220, 93, 94, 383], "unpack": [89, 252, 93], "pre": [89, 93], "fab": [89, 93], "completely": [89, 252, 93], "probuilderizing": [91], "via": [92], "centering": [92], "pivots": [92], "geometries": [192, 250, 92, 231], "so": [92, 182, 751], "mesh": [785, 707, 92], "colliders": [92], "accurately": [92], "generated": [249, 92, 165, 143], "children": [96, 94, 95], "probuilderize": [95], "prompted": [95], "\u201cyes\u201d": [95], "selection": [95], "center": [97], "pivot": [97], "check": [98, 707, 143], "every": [98], "component\u2019s": [98], "centre": [98], "has": [192, 98, 131, 163, 813, 696, 185, 639], "been": [192, 98, 131, 775, 844, 816, 185, 639], "centred": [98], "selecting": [98], "individually": [98], "toggling": [98], "between": [513, 98, 547, 455, 296, 360, 713, 589, 410], "center/pivot": [98], "left": [98, 130, 132, 133, 164, 140, 205, 251], "button": [98, 164, 132, 133, 198, 773], "after": [768, 98, 696, 181, 600, 605, 639], "centre/pivot": [98], "points": [512, 513, 518, 409, 410, 411, 669, 415, 546, 547, 548, 295, 296, 297, 552, 808, 301, 704, 454, 455, 460, 588, 589, 594, 98, 359, 360, 361, 365, 639], "same": [98, 240, 912, 696, 731, 893, 894], "location": [98, 619, 125], "setting": [100, 757], "using": [195, 100, 840, 172, 112, 115, 757, 118, 122], "procedural": [106, 100], "generation": [321, 483, 100, 420, 390, 106, 266, 332, 523, 557, 465, 370, 438, 314], "feature": [106, 763, 100, 757], "pre-requisites": [608, 105, 762], "building": [261, 143, 147, 148, 153, 154, 156, 157, 925, 162, 163, 802, 168, 175, 184, 186, 191, 194, 863, 106, 619, 889], "cad": [480, 387, 516, 550, 520, 329, 106, 363, 299, 458, 554, 592, 435, 596, 413], "assist": [106], "quick": [106], "shapes": [515, 549, 457, 106, 298, 362, 591, 412], "begin": [618, 107, 764, 653], "rhinoceros": [481, 388, 521, 330, 555, 109, 112, 436, 597, 122], "5": [416, 109, 366, 302, 112, 461, 855, 919, 119], "okay": [109], "grasshopper": [165, 137, 138, 111, 207, 151, 217], "elk": [113], "2.2.2": [113], "human": [120, 114, 117], "tree": [120], "frog": [120], "know": [122, 707], "which": [162, 642, 680, 808, 650, 841, 140, 656, 151, 122], "determine": [713, 122, 131, 642], "recommended": [122], "need": [705, 775, 143, 600, 122, 894], "refer": [122, 892, 143], "instructions": [122], "within": [162, 227, 154, 231, 185, 122, 220, 157], "each": [163, 645, 230, 154, 231, 646, 773, 786, 122, 220, 702], "unsure": [122], "how": [808, 122], "install": [122], "osm": [154, 124, 141], "data": [192, 165, 137, 171, 172, 188, 157, 185, 154, 124, 125, 159], "start": [771, 677, 138, 619, 721, 690, 691, 125], "off": [690, 771, 125], "must": [618, 125], "retrieve": [125], "relevant": [154, 125, 191], "site": [130, 131, 783, 787, 788, 125], "openstreetmap": [128, 126], "register": [129], "account": [696, 129], "log": [129], "corner": [680, 130], "enter": [130, 259, 642, 234, 618, 191], "address": [130, 309], "planned": [130], "once": [192, 224, 131, 132, 775, 232, 142, 185], "located": [131, 650, 683, 140, 656, 721, 660], "size": [131, 668, 917], "surrounding": [131], "wish": [131, 205, 206, 185, 250, 254], "change": [131, 164, 166, 647, 711, 712, 650, 807, 716, 721, 727, 728, 250], "simply": [131, 773], "scroll": [257, 131], "wheel": [131], "zoom": [161, 131], "out": [131, 807, 151], "map": [154, 131, 142, 143], "happy": [132], "choice": [132, 133, 134], "press": [234, 139, 132, 133], "\u201cexport\u201d": [132, 133], "header": [132], "second": [152, 133], "middle": [905, 133], "screen": [133], "confirm": [133], "save": [224, 134, 239], "directory": [134], "name": [707, 804, 134, 680, 172, 623, 656, 239, 688, 697, 665, 698, 732, 671], "whatever": [134], "prefer": [134], "cross": [136, 137], "reference": [545, 453, 358, 294, 136, 137, 645, 587, 144, 408, 511], "step": [261, 518, 137, 916, 917, 415, 673, 552, 301, 174, 829, 836, 460, 718, 594, 855, 742, 365, 244], "output": [137], "displayed": [137], "google": [137, 165, 143], "maps": [137, 165, 143], "openstreetmaps": [137], "gh": [160, 138, 139], "\u201copen\u201d": [139], "icon": [139, 687], "named": [481, 388, 521, 330, 139, 555, 436, 597], "\u201cgenerating": [139], "osm.gh\u201d": [139], "bubble": [171, 172, 140, 141, 181, 182, 185, 188, 190], "\u201cosm": [140, 141], "file\u201d": [140, 141], "script": [160, 224, 140, 142, 145, 157], "drag": [902, 140, 656, 160, 164, 680, 169, 170, 818, 182, 191, 707, 715, 724, 601, 620, 242, 247, 248, 254], "canvas": [160, 140], "move": [480, 387, 520, 329, 554, 140, 653, 435, 596], "around": [676, 140], "\u201cselect": [141], "existing": [141], "locate": [160, 218, 141, 207], "recently": [141], "downloaded": [141], "selected": [451, 356, 292, 585, 905, 142, 406, 509, 543], "automatically": [142], "generate": [142], "street": [512, 514, 523, 524, 143, 527, 534, 407, 408, 409, 411, 544, 545, 546, 548, 293, 165, 295, 294, 297, 552, 557, 558, 452, 453, 454, 456, 586, 587, 588, 590, 594, 601, 602, 604, 605, 357, 358, 359, 361, 510, 511], "compare": [143], "taking": [143], "special": [143], "attention": [143], "outputs": [143], "under": [516, 773, 909, 143, 914, 791, 413, 800, 550, 299, 458, 846, 847, 592, 729, 602, 858, 732, 864, 227, 363, 239, 626, 630, 633], "\u201cautomated": [143], "classification\u201d": [143], "double": [191, 164, 143], "classifications": [143], "order": [813, 143], "constantly": [143], "back": [160, 217, 143], "streets": [143], "manual": [156, 148, 143], "scripting": [144], "segregated": [145], "three": [145], "major": [145, 151], "they": [145, 642, 755, 751], "automated": [146, 147, 150, 153, 154], "non-building": [146, 150], "info": [146, 150], "classification": [146, 147, 148, 150, 153, 154, 156], "first": [642, 903, 905, 813, 653, 149, 895], "labelled": [152, 155, 149, 198], "separates": [151], "such": [680, 619, 623, 786, 726, 151, 824], "minor": [151], "turns": [151], "curves": [151], "ignore": [151], "portion": [160, 154, 157, 151], "especially": [151], "unfamiliar": [151], "helps": [154], "different": [803, 774, 775, 808, 902, 845, 590, 817, 787, 788, 154, 893, 702], "types": [154, 787, 157, 165], "buildings": [154, 787, 165, 191], "exist": [154], "based": [154, 787, 788], "tagged": [154], "examples": [154], "landed": [177, 154], "offices": [154], "apartments": [154], "category": [213, 182, 154, 187, 220], "display": [154, 195], "given": [154], "showcase": [154], "any": [713, 619, 625, 634, 154], "available": [154], "however": [705, 615, 845, 817, 154], "give": [665, 154, 804], "work": [545, 515, 453, 358, 294, 549, 457, 298, 362, 587, 613, 591, 408, 154, 412, 511], "third": [155], "help": [157], "remedy": [157], "lack": [157], "designed": [157], "way": [157], "extract": [157], "footprints": [162, 163, 157], "confines": [157], "land": [162, 163, 157, 167], "boundaries": [157], "categorize": [157], "according": [518, 552, 460, 365, 301, 594, 157, 415], "their": [157], "internalise": [159], "window": [160, 227, 234, 683, 207, 661, 248, 251, 255], "shown": [160, 162, 197, 209, 850], "components": [161, 772, 774, 775, 841, 590, 703], "highlighted": [162], "slider": [162, 163, 164, 167, 221, 191], "allows": [841, 162, 862], "isolate": [162, 163], "desired": [192, 480, 162, 387, 164, 231, 168, 329, 520, 554, 239, 435, 596, 191], "boundary": [162, 163, 167], "marked": [162, 230], "yellow": [162], "notice": [305, 163], "curve": [163], "number": [289, 163, 645, 647, 424, 713, 274, 469, 374, 285], "assigned": [163, 518, 552, 460, 365, 301, 594, 415], "value": [163, 164, 259, 166, 647, 712, 716, 174, 691, 729, 634, 731, 191], "type": [773, 392, 268, 525, 529, 530, 536, 537, 795, 672, 417, 163, 173, 175, 303, 559, 440, 186, 334, 462, 485, 232, 235, 239, 367], "particular": [163, 213, 254, 919], "its": [192, 163, 885, 254], "either": [176, 185, 164], "manually": [164], "input": [164], "identify": [165, 782, 783], "comparison": [165], "line": [545, 453, 358, 165, 294, 678, 587, 408, 511], "footprint": [168], "area": [168, 628], "pull": [169], "white": [448, 325, 169, 171, 430, 280, 475, 380], "tip": [169, 171], "closed": [170], "connect": [171], "th": [171], "rename": [172], "clicking": [256, 172], "replacing": [172], "format": [481, 388, 521, 330, 555, 172, 436, 597], "item(xx)_(building": [173], "xx": [174], "refers": [174], "9": [174], "these": [176, 705, 786, 214], "categories": [176, 214, 192], "condo": [178, 215], "commercial": [179], "hdb": [180], "\u201cinternalise": [181], "data\u201d": [181], "renaming": [181], "above": [338, 347, 182], "keep": [185, 182], "sorting": [182], "neat": [182], "tidy": [182], "customise": [184, 194, 216], "height": [395, 272, 528, 277, 533, 535, 283, 540, 287, 422, 427, 306, 565, 310, 184, 568, 315, 443, 191, 575, 322, 578, 338, 467, 344, 472, 347, 353, 491, 494, 372, 501, 504, 377, 383], "saved": [192, 481, 388, 521, 330, 555, 844, 816, 436, 597, 185], "bring": [185], "over": [185, 210], "appropriate": [192, 185], "attach": [832, 866, 804, 874, 847, 784, 188, 819, 851, 882, 822, 825, 859, 796, 189], "context": [835, 261, 848, 249, 828, 191], "connected": [192], "bake": [192], "texture": [259, 516, 413, 550, 299, 194, 458, 205, 592, 213, 216, 222, 223, 231, 363, 250, 253, 254, 255], "turn": [195, 707, 680, 713, 715, 717, 718, 696], "mode": [195], "rendered": [196, 516, 550, 458, 363, 299, 592, 413], "image": [197, 230, 202, 205, 240], "toolbar": [200, 227], "choose": [202], "picture": [203], "drop": [204, 242, 247, 248, 254], "down": [259, 204], "list": [808, 204], "images": [205], "photoshopped": [242, 205], "ones": [205], "sample": [205], "package": [205], "successful": [205], "result": [205], "repeat": [416, 715, 461, 302, 366, 206, 919, 926], "until": [206], "uploaded": [206], "return": [207], "custom": [208], "cursor": [210], "material": [256, 516, 550, 458, 299, 363, 592, 211, 413], "applicable": [214], "just": [650, 251, 653, 214], "switch": [217], "group": [386, 732, 518, 519, 328, 552, 479, 553, 460, 365, 301, 742, 434, 594, 595, 218, 220, 415], "box": [738, 483, 709, 623, 752, 755, 823, 602, 219, 734], "found": [915, 220], "looking": [221, 782], "adjust": [221, 623], "multiple": [518, 552, 460, 301, 594, 792, 222, 415], "suit": [223], "required": [768, 223, 518, 552, 460, 365, 301, 594, 415], "satisfied": [224], "hit": [224], "ctrl+s": [224], "tab": [800, 773, 229, 602, 604, 858], "faint": [230], "circle": [230], "assign": [231, 909, 791, 792, 795], "selall": [233], "onto": [234, 902, 254], "bar": [234], "settings": [451, 356, 292, 585, 844, 240, 816, 406, 509, 543], "consists": [241, 242], "main": [248, 241, 776], "crucial": [244], "skipping": [245], "break": [245], "imported": [248, 251, 604], "prefab": [773, 683, 622, 818, 252, 660, 726, 248, 251, 636, 638], "game": [248], "congratulations": [249], "successfully": [249], "mappings": [250], "individual": [250], "manager": [251], "geometry": [254, 255], "modify": [873, 254, 881], "you\u2019ve": [254], "dragged": [261, 254], "changed": [254, 639], "edit": [824, 255], "scaling": [865, 810, 887, 255], "look": [255], "expand": [256], "options": [256], "triangle": [256], "tiling": [258], "1": [259, 711, 712, 713, 807, 717, 529, 917, 536, 703], "scale": [259, 893], "4": [905, 634, 261], "standard": [600, 261, 599], "singaporean": [261], "future": [261], "bus": [419, 420, 296, 266, 267, 301, 270, 302, 464, 369, 370, 465, 282, 286, 415], "stop": [419, 420, 266, 267, 301, 270, 302, 464, 369, 370, 465, 282, 286], "getting": [484, 391, 267, 524, 333, 558, 439], "dimensions": [416, 484, 391, 267, 524, 333, 366, 302, 461, 558, 439], "specifications(m": [418, 486, 393, 269, 526, 335, 304, 368, 463, 560, 441], "generic": [416, 394, 461, 302, 366, 270, 527, 442], "shelter": [350, 421, 271, 337, 466, 371, 341, 346, 286], "min": [422, 272, 338, 339, 340, 372, 467, 634, 283, 348, 349], "2.2m": [545, 453, 358, 294, 422, 472, 427, 587, 272, 530, 467, 372, 277, 408, 377, 511], "width": [288, 323, 423, 396, 273, 307, 339, 340, 316, 311, 348, 373, 444, 468, 284, 349], "3m": [289, 324, 423, 424, 455, 273, 274, 339, 468, 373, 374, 348, 469, 284, 285, 445], "length": [289, 573, 424, 489, 397, 528, 274, 499, 563, 469, 374, 535, 285, 317], "increments": [289, 424, 274, 469, 374, 285], "starting": [289, 424, 618, 274, 469, 374, 285], "6m": [289, 296, 360, 424, 274, 469, 374, 285], "36m": [289, 424, 274, 469, 374, 285], "commuters": [289, 424, 274, 469, 374, 285], "thickness": [535, 425, 398, 528, 275, 308, 341, 470, 375, 312, 350], "0.2m": [425, 489, 490, 530, 275, 563, 341, 470, 375, 564, 350], "supporting": [361, 426, 276, 471, 376], "beams": [376, 426, 276, 471], "radius": [352, 577, 503, 567, 428, 493, 690, 532, 278, 343, 473, 378, 539], "0.1x2.2": [473, 378, 428, 278], "color": [516, 399, 279, 413, 550, 299, 429, 569, 446, 318, 579, 325, 458, 592, 474, 363, 495, 505, 379], "grey": [580, 325, 431, 400, 496, 570, 281, 506, 476, 381, 318, 447], "flushed": [282], "kerb": [282, 319], "2m": [283], "protruding": [286], "road": [656, 697, 286, 696], "4.8m": [287], "4.5m": [288], "gotten": [384, 449, 290, 354, 541, 581, 326, 432, 404, 507, 477], "lta": [385, 450, 355, 291, 582, 327, 542, 433, 405, 478], "modelling": [544, 451, 356, 357, 292, 293, 452, 585, 586, 406, 407, 509, 510, 543], "dimension": [545, 451, 356, 292, 358, 294, 453, 585, 587, 543, 406, 408, 509, 511], "mm": [451, 356, 292, 585, 406, 509, 543], "m": [451, 356, 292, 585, 406, 509, 543], "furniture": [514, 517, 518, 407, 411, 414, 415, 544, 548, 293, 551, 552, 297, 300, 301, 452, 456, 586, 459, 460, 590, 593, 594, 601, 602, 604, 605, 357, 361, 364, 365, 510], "no": [545, 453, 358, 294, 587, 408, 511], "would": [545, 804, 453, 358, 294, 775, 809, 902, 587, 903, 906, 408, 893, 511], "like": [545, 804, 453, 358, 294, 902, 809, 903, 587, 906, 813, 656, 408, 732, 893, 511], "create": [514, 655, 787, 788, 408, 411, 796, 545, 548, 804, 294, 679, 297, 696, 697, 705, 706, 453, 456, 587, 590, 846, 734, 358, 361, 751, 752, 893, 511], "created": [800, 545, 673, 897, 453, 358, 294, 650, 587, 718, 854, 408, 668, 862, 511], "creating": [545, 453, 358, 294, 587, 600, 408, 511], "ground": [545, 453, 358, 294, 587, 338, 786, 408, 347, 511], "plane": [545, 453, 358, 294, 587, 689, 408, 511], "2d": [514, 515, 408, 411, 412, 545, 548, 549, 294, 297, 298, 453, 456, 457, 587, 590, 591, 358, 361, 362, 511], "space": [545, 515, 453, 358, 294, 549, 457, 298, 362, 587, 591, 408, 412, 511], "lane": [545, 453, 358, 294, 587, 408, 511], "3d": [515, 516, 408, 412, 413, 545, 549, 294, 550, 298, 299, 706, 453, 457, 458, 587, 591, 592, 358, 362, 363, 511], "decide": [512, 546, 454, 359, 295, 588, 409], "whether": [512, 546, 454, 359, 295, 588, 409], "parallel": [512, 546, 454, 359, 295, 588, 409], "perpendicular": [512, 546, 454, 359, 295, 588, 409], "spacing": [513, 547, 455, 296, 360, 589, 410], "even": [513, 547, 455, 296, 360, 589, 410, 894], "stops": [296, 301, 415], "apart": [324, 455, 296, 360, 445], "uneven": [513, 547, 455, 296, 360, 589, 410], "decided": [513, 547, 455, 296, 360, 589, 410], "outline": [514, 548, 456, 297, 361, 590, 411], "pillars": [297, 361], "align": [548, 297, 361, 726, 411], "arrayed": [297, 411, 548, 361], "extruding": [515, 549, 457, 298, 362, 591, 412], "add": [516, 789, 662, 663, 413, 798, 674, 550, 808, 299, 684, 685, 692, 695, 698, 699, 700, 710, 458, 592, 736, 363, 753, 626], "realism": [516, 550, 458, 363, 299, 592, 413], "object": [897, 516, 902, 905, 911, 921, 794, 795, 924, 413, 672, 550, 299, 694, 828, 706, 835, 458, 847, 592, 734, 738, 742, 363, 752, 638], "adding": [516, 772, 550, 458, 363, 299, 592, 413], "changes": [516, 550, 458, 363, 299, 592, 413], "reflected": [516, 550, 458, 363, 299, 592, 413], "view": [516, 550, 458, 363, 299, 592, 413], "then": [804, 517, 551, 459, 364, 300, 593, 692, 414], "orientate": [517, 551, 459, 364, 300, 593, 414], "direction": [517, 902, 551, 459, 364, 300, 623, 593, 885, 414], "lastly": [518, 552, 460, 365, 301, 594, 415], "2": [836, 518, 552, 460, 365, 301, 716, 703, 530, 594, 916, 537, 829, 926, 415], "optional": [416, 366, 461, 302], "complementary": [416, 366, 461, 302], "furnitures": [416, 366, 461, 302], "board": [528, 305, 535], "1.8m": [306], "1m": [307], "0.15m": [308, 310], "plate": [309], "1.5m": [324, 455, 529, 311, 445, 319], "0.05m": [577, 568, 494, 503, 312], "bench": [390, 394, 313, 314, 411], "0.45m": [315, 395], "0.33m": [396, 316], "1.2m": [317, 397], "brown": [401, 318], "setback": [319], "bollard": [320, 321, 442, 438], "0.9m": [322, 499, 537, 443, 573, 383], "overall": [323, 396, 339, 885, 348, 444], "0.1m": [352, 323, 398, 343, 444], "distance": [324, 445], "objects": [386, 387, 388, 519, 520, 521, 781, 786, 795, 800, 553, 554, 555, 434, 435, 436, 328, 329, 330, 595, 596, 597, 857, 479, 480, 481, 872, 880], "0,0,0": [480, 387, 520, 329, 554, 435, 596], "point": [387, 899, 903, 520, 905, 656, 673, 807, 554, 435, 692, 699, 701, 329, 596, 480, 617, 618, 750, 624], "views": [481, 388, 521, 330, 555, 436, 597, 605], "deleted": [481, 388, 521, 330, 555, 436, 597], "compatible": [481, 388, 521, 330, 555, 436, 597], "digital": [481, 388, 521, 330, 555, 436, 597], "covered": [360, 332, 365, 333, 366, 345], "walkway": [345, 332, 365, 361], "walkways": [360, 365, 333, 366], "overhead": [336, 497, 571], "bridges": [336], "5.7m": [338], "walkable": [340, 349], "2.4m": [340, 349], "pillar": [342, 351], "3.6m": [344, 353, 347], "pedestrian": [841, 782, 757, 345, 763, 893], "paths": [345], "sheltered": [361], "longer": [365], "safety": [382], "railing": [382], "1.1m": [383], "benches": [415, 787, 416, 391], "seat": [398], "amber": [488, 402, 498, 562, 572], "green": [899, 807, 488, 498, 403, 562, 572], "legs": [411], "bollards": [455, 460, 461, 439], "post": [483, 484, 518], "boxes": [484, 518], "traffic": [487, 590, 497, 561, 571], "light": [497, 571, 561, 487], "vertical": [561, 487], "housing": [488, 590, 498, 562, 572], "3": [704, 673, 742, 488, 498, 562, 919, 572, 702], "lights": [488, 590, 498, 562, 594, 572], "red": [488, 498, 562, 572], "breadth": [574, 490, 500, 564], "0.6m": [536, 491, 565], "pole": [576, 492, 590, 531, 566, 502, 538], "2.29m": [493, 567], "0.3m": [500, 501, 536, 574, 575], "5.2m": [504, 578], "imda": [508], "letter": [518], "sign": [552, 523, 534, 527], "signs": [552, 524], "x": [528, 529, 530, 535, 536, 537], "1.3m": [529], "0.005m": [536, 529, 530, 537], "0.02m": [539, 532], "2.5m": [540, 533], "single": [792, 534], "0.35m": [537], "poles": [548], "lighting": [557], "lightings": [558], "sso": [584], "utilising": [599], "library": [600, 599], "utilise": [600], "our": [600, 842, 814], "scene": [601, 818, 781], "uncheck": [602], "inspector": [773, 602, 683, 661], "\u2192": [602], "\u201cimport": [602], "cameras\u201d": [602], "\u201capply\u201d": [603], "\u201chierarchy\u201d": [604], "\u201cunpack": [604], "prefab\u201d": [604], "camera": [605], "front": [631, 605, 726, 623], "perspective": [605], "delete": [605], "action": [605], "\u201cobject\u201d": [605], "should": [834, 701, 748, 884, 605], "understand": [607], "what": [607], "simulation": [642, 645, 650, 782, 660, 810, 683, 814, 841, 842, 720, 726, 607, 609, 865, 613, 615, 618, 619, 622, 751, 757, 887, 763, 893, 638], "about": [771, 607], "covers": [607], "features": [771, 607], "flow": [642, 607], "was": [609], "free": [614], "instead": [615], "since": [711, 615], "adviced": [615], "spawn": [743, 617, 624, 656, 628, 692, 634, 635, 699], "vehicles": [752, 618, 751], "suitable": [619], "entrypoint": [619], "entrance": [619, 734], "lotobject": [725, 731, 621, 742], "carpark": [742, 748, 734, 622, 720, 721, 722, 732, 638, 735], "driving": [638, 622, 711], "taller": [726, 623], "facing": [726, 623], "intended": [623], "prevent": [625], "confusion": [625], "later": [645, 625, 690, 691, 639], "spawnpoint": [704, 626, 630, 633, 667], "gameobject": [673, 732, 804, 796, 806, 679, 715, 846, 656, 626, 697, 788, 630, 791, 633, 668, 798], "\u201cpooling\u201d": [626], "fill": [627, 739, 670, 687], "permissiblebounds": [731, 629], "lotfacingtrigger": [632], "delay": [634, 635, 743], "time": [634, 635, 715, 743], "seconds": [634, 635], "next": [647, 744, 696, 634, 635], "appear": [634, 635, 743], "than": [634, 821], "max": [635], "maximum": [635], "fordfocus_white": [637], "ai_controlled": [637], "leave": [745, 639], "aim": [896, 901, 904, 907, 910, 913, 790, 920, 793, 923, 797, 669, 799, 672, 805, 833, 848, 852, 860, 867, 875, 883, 639], "decision": [704, 673, 692, 699, 669, 639], "0": [905, 711, 639], "state": [641, 642, 645, 647, 650, 674, 702, 705, 710, 711, 712, 716, 721, 723, 730, 731, 734, 744, 639], "machine": [641, 674, 642, 744, 639], "animator": [641, 674, 645, 744, 650, 695, 731, 700, 702], "unique": [642, 645, 647], "vehicle\u2019s": [721, 642], "possible": [642, 782, 783], "states": [642, 702], "exit": [642], "duplicate": [643, 732], "parking": [644], "controller": [833, 650, 826, 645], "animation": [645], "remember": [645, 718], "label": [645, 796, 744, 846, 688, 788, 695, 665, 700, 671], "module": [645, 703], "transition": [730, 646], "conditions": [646], "equals": [647], "finally": [648, 674, 718], "aicontroller": [649, 682, 659, 660, 698, 703], "carparkdriving": [650, 683, 660, 726], "straight": [678, 652, 656, 696, 697], "lines": [652], "simple": [833, 653], "movement": [678, 775, 653, 721, 885], "forward": [653, 917], "hierarchy": [706, 654], "empty": [732, 804, 679, 846, 655, 788, 796], "end": [899, 807, 715, 656, 697], "something": [656, 707, 732, 680], "straightroad1": [657], "spawned": [660], "aimfollow": [672, 696, 703, 664, 665, 671], "example": [665], "spawntodrive": [665, 674, 671], "earlier": [668, 671], "plus": [668], "gave": [671], "aimorbit": [672, 693, 686, 703], "allowed": [674, 700, 702, 695], "behaviour": [674, 688, 695, 696, 700, 702], "beginning": [674], "turning": [676, 711, 714, 718, 691], "bends": [676], "completed": [696, 677], "previous": [677], "distinct": [680, 688], "\u201cturn1\u201d": [680], "man": [687], "describing": [688], "xz": [689], "finetune": [690, 691], "delta": [691], "angle": [691], "positive": [691], "clockwise": [691], "negative": [691], "counter-clockwise": [691], "travel": [696, 902], "along": [696], "hence": [696, 705], "exact": [696], "again": [696], "\u201caimfollow\u201d": [698], "subsequent": [699], "having": [702], "needs": [705], "trigger": [705, 708, 718, 721, 730, 734], "allow": [705, 714], "transit": [705], "another": [705, 922, 796, 734], "triggers": [705], "cube": [706, 726], "spot": [707], "executed": [707], "addition": [707], "disable": [707], "renderer": [707], "\u201ctrigger": [710], "transition\u201d": [710], "normal": [711], "values": [834, 715, 850, 711], "final": [712, 716], "probability": [713, 717], "0-1": [713], "braking": [714], "zone": [714], "checked": [714, 821], "deceleration": [714], "14-16": [715], "complete": [717, 718], "fine": [718], "tune": [718], "adjusting": [718], "parameters": [741, 873, 813, 718, 881, 884], "shifting": [718], "12-17": [718], "simulate": [721, 734], "lot": [726], "\u201cparked\u201d": [731], "lots": [732], "intuitive": [732], "carparkobjects": [733], "collider": [738, 752, 785, 755, 823, 734], "similar": [734], "little": [734], "behind": [734], "switches": [734], "teleporter": [737, 740], "placed": [742], "random": [743], "taken": [743], "car": [743], "parked": [743], "others": [745], "towards": [746], "unchecked": [747], "simulator": [748], "smoothly": [748], "despawn": [750], "despawned": [751], "won\u2019t": [751], "stuck": [751], "vanish": [752], "vehicledespawn": [754], "enters": [755], "disappear": [755], "automatic": [763], "pathfinding": [763], "obtaining": [768], "license": [768], "restart": [768], "basic": [770, 771, 812, 813], "frequently": [771], "\u201cadd": [773], "component\u201d": [773], "bottom": [773], "names": [773], "implement": [773], "added": [775], "tabs": [775], "instantiate": [850, 775], "configure": [903, 906, 891, 775], "reactive": [777, 914, 873, 881], "indicator": [779], "classifying": [872, 857, 880, 781], "areas": [782], "walking": [783], "surfaces": [783], "obstacles": [841, 786, 870, 783], "agents": [902, 840, 812, 813, 783, 786, 919, 894], "encounter": [783], "traversing": [783], "fall": [786], "walk": [786], "layers": [792, 787, 788], "unity\u2019s": [787], "i.e": [787], "pedestrians": [841, 787, 878], "corresponding": [795, 909, 798, 791], "\u201clayers\u201d": [791], "parameter": [791], "screenshot": [791], "\u201cobstacles\u201d": [791], "agent": [903, 905, 906, 917, 795, 818, 821, 824, 827, 831, 834, 838, 841, 846, 862, 869, 877, 885, 891], "perceive": [795], "certain": [795], "\u201cperceiver\u201d": [796], "steering": [858, 852, 797], "perceiver": [858, 797, 854], "\u201cenvironments\u201d": [800], "waypoint": [802, 862], "being": [803], "construct": [803], "kinds": [803], "pathways": [803], "accomodate": [803], "scenarios": [803], "behaviours": [803, 838, 840, 891, 894, 831], "path": [896, 804, 805, 901, 807, 904, 910, 920, 923], "linear": [896, 805, 901, 904, 910, 920, 923], "count": [807], "sphere": [899, 807], "pop": [807], "shortcuts": [808], "remove": [808], "differ": [808], "os": [808], "reverse": [809, 898, 899], "pathway": [809], "otherwise": [809], "variability": [809], "setup": [812], "effectively": [813], "interact": [813], "physics": [813], "interactions": [813], "purpose": [842, 814], "purchased": [842, 814], "advancedpeoplepack2": [843, 815], "already": [816, 844], "prefabs": [816, 844], "case": [817, 905, 845], "assest": [817, 845], "rigidbody": [820], "gravity": [821], "bounding": [824], "volume": [824], "matches": [824], "manner": [824], "root": [826], "motion": [826], "instantiated": [835, 828], "configuring": [840, 838, 831], "default": [834, 884], "sufficient": [834, 884], "waypoints": [841, 907, 925, 913, 889, 860, 893, 894, 863], "fundamental": [841], "realistic": [841, 893, 894], "filter": [852], "depth": [864], "seek": [867], "notifies": [877, 869], "classified": [879, 871], "stabilization": [883, 885], "ensures": [885], "holds": [885], "current": [885], "appears": [885], "much": [885], "smoother": [885], "disclaimer": [888], "those": [892], "repeating": [893], "few": [893], "large": [893], "represent": [893], "furthermore": [894], "option": [895], "indicated": [905, 899], "route": [899, 902], "constructed": [902], "portions": [902], "rotate": [902], "closest": [905], "index": [905, 915], "orange": [905], "dot": [905], "counting": [905], "starts": [905], "enviroment": [909], "target": [915], "follows": [917], "sequence": [917], "backward": [917], "patrol": [918], "circular": [918], "build": [922]}}